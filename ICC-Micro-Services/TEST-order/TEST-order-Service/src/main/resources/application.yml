server:
  port: 8861                    # 指定该Eureka实例的端口
spring:
  profiles:
    active: dev
logging:
  #配置日志文件路径 不同目录下的日志可配置不同级别
  level:
    root: INFO
    org.springframework.cloud.sleuth: DEBUG
    # org.springframework.web.servlet.DispatcherServlet: DEBUG
feign:
  hystrix:
    enabled: true             #使用feign开启熔断器
  compression:
    request:
      enabled: true   # 配置请求GZIP压缩
      mime-types: text/xml,application/xml,application/json   # 配置压缩支持的MIME TYPE
      min-request-size: 2048   # 配置压缩数据大小的下限
    response:
      enabled: true    # 配置响应GZIP压缩

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000       #熔断超时时间

---
spring:
  profiles: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test-user?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: test
    password: test
    #下面为连接池补充设置
    initialSize: 5
    # 配置获取连接等待超时的时间   
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒 
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据 
    useGlobalDataSourceStat: true
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
spring:
  profiles: docker
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server1:8761/eureka/,http://eureka-server2:8762/eureka/
  instance:
    prefer-ip-address: true
